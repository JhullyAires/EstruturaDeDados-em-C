#include <conio.h>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <stdbool.h>

int vetOriginal[10];

void populeVetor() {
  	srand(time(NULL));
  	int i;
  	for ( i = 0; i <= 9; i++) {
    	vetOriginal[i] = rand() % 100;
  	}
}

void maiorValor(int vetor[]) {
	int maior = vetor[0];
	int i;
	for (i = 0; i <= 9; i++) {
		if (vetor[i] > maior)
	    	maior = vetor[i];
	}
	printf("\nOpcao 2 - Imprimindo o maior valor do vetor: %d ", maior);
}

void contaPares(int vetor[], int n) {
	int i, contaPares = 0;
	
    for (i = 0; i < n; i++) {
		if((vetor[i] % 2) == 0) {
    	contaPares = contaPares + 1;
		}
	}
    printf("\nOpcao 3 - Contabilizacao de quantos elementos sao pares: %d", contaPares);
}

int somatorio(int vetor[], int tam) {
	int i, soma;
	soma = 0;
	
	for(i = 0; i < tam; i++){
		soma = soma + vetor[i];
	}
	printf("\nOpcao 4 - Imprimindo somatorio dos elementos: %d", soma);
}

void ordemInversa(int vetor[], int ini, int fim) {
	int aux;
	if (ini < fim) {
		aux = vetor[ini];
    	vetor[ini] = vetor[fim];
    	vetor[fim] = aux;
    	ordemInversa(vetor, ini + 1, fim - 1);
  	}
}

void ordemCrescente(int vetor[]) {
	int i, aux, j;
	for( i = 0; i < 10; i++) {
		for( j = i + 1; j < 10; j++) {
			if(vetor[i] > vetor[j]) {
	        aux = vetor[i];
	        vetor[i] = vetor[j];
	        vetor[j] = aux;
	      	}
	    }
  	}
}

void imprimir(int vetor[], int tam) {
	if(tam == 1)
		printf("%d ", vetor[tam - 1]);
	else {
		imprimir(vetor, tam - 1);
		printf("%d ", vetor[tam - 1]);
	}
}

int main() {
  	int opcao = 0;

  	printf("\n-------------------------------------MENU-------------------------------------\n");
  	printf("\nDigite 1- para criar um vetor com 10 numeros aleatorios");
  	printf("\nDigite 2- para mostrar o elemento de maior valor do vetOriginal");
  	printf("\nDigite 3- para contabilizar quantos elementos sao pares no vetOriginal");
  	printf("\nDigite 4- para mostrar o valor do somatorio dos elementos do vetOriginal");
  	printf("\nDigite 5- para mostrar os elementos do vetorOriginal na ordem inversa");
  	printf("\nDigite 6â€“ para ordenar o vetor crescentemente (Ordem crescente dos numeros)");
  	printf("\nDigite 7- para sair");

  	while (opcao != 7){
	  	printf("\n\nDigite a opcao escolhida: ");
	  	fflush(stdin);
	  	scanf("%d", &opcao);
	  
	  	printf("\n");
	  
	  	switch (opcao) {
		  	case 1:
			  	printf("\n---------------------------------RESULTADO----------------------------------\n\n");
			    printf("Opcao 1 - Imprimindo vetor aleatorio: ");
			    populeVetor(vetOriginal);
			    imprimir(vetOriginal, 10);
			    break;
		    
			case 2:
			    maiorValor(vetOriginal);
			    break;
			    
			case 3:
			  	somatorio(vetOriginal, 10);
				break;
				
			case 4:
				contaPares(vetOriginal, 10);
				break;
				
			case 5:
			    printf("\nOpcao 5 - imprimindo em ordem inversa: ");
			    ordemInversa(vetOriginal, 0, 9);
			    imprimir(vetOriginal, 10);
			    break;
			    
			case 6:
			    printf("\nOpcao 6 - imprimindo em ordem crescente: ");
			    ordemCrescente(vetOriginal);
			    imprimir(vetOriginal, 10);
			    break;
			    
			case 7:
			    printf("\nOpcao 7 - SAINDO...");
			    printf("\n\n-------------------------------------FIM--------------------------------------\n\n");
			    exit(1);
				break;
				
			default:
			    printf("\nOPCAO INVALIDA");
	  	}
	}
  	return 0;
}
